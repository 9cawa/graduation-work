log:
  path: logsTest

spring:
  datasource:
    url: jdbc:h2:mem:test;MODE=PostgreSQL
  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  flyway:
    baseline-on-migrate: true
  application:
    name: notification-center
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://cloud.alta-group.ru/iam/auth/realms/altacloud-dev
          jwk-set-uri: https://cloud.alta-group.ru/iam/auth/realms/altacloud-dev/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: ******************
            client-secret: ******************
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: https://cloud.alta-group.ru/iam/auth/realms/altacloud-dev
            token-uri: https://cloud.alta-group.ru/iam/auth/realms/altacloud-dev/protocol/openid-connect/token
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:19092
          autoCreateTopics: true
          minPartitionCount: 1
          replicationFactor: 1
          consumerProperties:
            schema.registry.url: http://:8081
            auto.register.schemas: false
            use.latest.version: true
            specific.avro.reader: true
            value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        bindings:
          consumeStationNotification-in-0:
            consumer:
              enableDlq: true
              dlqName: test.altacloud.notifications.stations.dlq
          consumeUserNotification-in-0:
            consumer:
              enableDlq: true
              dlqName: test.altacloud.notifications.users.dlq
      bindings:
        consumeUserEvent-in-0:
          group: ${spring.application.name}
          destination: test.altacloud.users.cdc.avro,test.altacloud.dealers.cdc.avro
        consumeStationEvent-in-0:
          group: ${spring.application.name}
          destination: test.altacloud.binding.stations.avro
        consumeStationNotification-in-0:
          group: ${spring.application.name}
          destination: test.altacloud.notifications.stations.avro
        consumeUserNotification-in-0:
          group: ${spring.application.name}
          destination: test.altacloud.notifications.users.avro
  mail:
    username: ******************
    password: ******************
    host: smtp.beget.ru
    port: 465
    properties:
      smtp:
        auth: true
        socketFactory:
          port: 465
          class: javax.net.ssl.SSLSocketFactory

sms:
  api:
    auth: Basic ******************
    url: https://a2p-api.megalabs.ru

errors-service:
  url: localhost:8090/errors/{code}